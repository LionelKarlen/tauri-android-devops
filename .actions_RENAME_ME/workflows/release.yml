name: Release

on: 
  push:
    branches:
      - 'main'
    tags:
    - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.comp_ver.outputs.should_release }}
      current_version: ${{ steps.comp_ver.outputs.current_version }}
    steps:
      - uses: actions/checkout@v4
      - uses: cardinalby/git-get-release-action@1.2.5 
        id: check_rel
        name: get latest release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          latest: true
          prerelease: false
          doNotFailIfNotFound: true
      - name: compare versions
        uses: mmta/should-release-action@v1.0.0
        id: comp_ver
        with:
          file_path: src-tauri/Cargo.toml
          release_tag: ${{ steps.check_rel.outputs.tag_name }}

  build_web:
    needs: [setup]
    if: needs.setup.outputs.should_release == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun i && bun run build
      - run: zip -r build_${{needs.setup.outputs.current_version}}.zip build/
      - uses: actions/upload-artifact@v4
        with:
          name: build_web
          path: ./build_*.zip

  build_android:
    needs: [setup]
    if: needs.setup.outputs.should_release == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: crazy-max/ghaction-setup-docker@v3
      - run: ./androidbuild.sh
      - run: mv ./release.apk ./release_${{needs.setup.outputs.current_version}}.apk
      - run: mv ./release.aab ./release_${{needs.setup.outputs.current_version}}.aab
      - uses: actions/upload-artifact@v4
        with:
          name: build_android
          path: ./release_*.*


  build_docker:
    runs-on: ubuntu-latest
    needs: [setup]
    if: needs.setup.outputs.should_release == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{needs.setup.outputs.current_version}}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      
  release:
    needs: [build_web,build_android,setup]
    if: needs.setup.outputs.should_release == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "build_*/*_${{needs.setup.outputs.current_version}}.*"
        tag: ${{needs.setup.outputs.current_version}}
        generateReleaseNotes: true
        artifactErrorsFailBuild: true
